version: "3"

services:
  zookeeper:
    image: "zookeeper:3.6.3"
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
  kafka:
    image: "bitnami/kafka:3"
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic1:1:1"
      KAFKA_BROKER_ID: 1
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT , PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: example
      POSTGRES_DB: my_db
    ports:
      - "5432:5432"
    volumes:
      - ./data:/var/lib/postgresql/data

  marketer:
    # platform: linux/amd64
    build: ./marketer
    restart: always
    volumes:
      - ./marketer:/home/app/
    environment:
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: topic1
    ports:
      - "3001:3001"
    depends_on:
      - db
      - kafka
      - customer

  customer:
    # platform: linux/amd64
    build: ./customer
    restart: always
    volumes:
      - ./customer:/home/app/

    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: example
      DB_NAME: my_db
      KAFKA_HOST: kafka:9092
      KAFKA_TOPIC: topic1
    ports:
      - "3000:3000"
    depends_on:
      - kafka
      - db
